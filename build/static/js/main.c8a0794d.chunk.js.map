{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","console","log","important","label","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","className","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","updatedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","createdNote","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACpBC,QAAQC,IAAIH,EAAKI,WACjB,IAAMC,EAAQL,EAAKI,UAAY,qBAAuB,iBAEpD,OACE,+BACGJ,EAAKM,QADR,IACiB,wBAAQC,QAASN,EAAjB,SAAoCI,Q,gBCPrDG,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD5BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKC,UAAU,QAAf,SACKD,KC8EEE,EAlFH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,iBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAsBAC,qBAAU,WACRC,IACGrB,MAAK,SAAAsB,GACJT,EAASS,QAEZ,IAEH,IAqBMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAnC,GAAI,OAAIA,EAAKI,aAGhE,OAFAF,QAAQC,IAAI,UACZD,QAAQC,IAAI+B,GAEV,gCACE,uCACA,cAAC,EAAD,CAAcf,QAASU,IACvB,8BACE,yBAAQtB,QAAW,kBAAMqB,GAAYD,IAArC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAApC,GAAI,OACnB,cAAC,EAAD,CAAsBA,KAAQA,EAAMC,iBAAkB,kBAnCnC,SAACe,GAC1B,IAAMhB,EAAOuB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,KAChCuB,EAAW,2BAAOvC,GAAP,IAAaI,WAAYJ,EAAKI,YAE/C4B,EAAmBhB,EAAIuB,GAAa5B,MAAK,SAAA6B,GACvCtC,QAAQC,IAAIqC,GACZhB,EAASD,EAAMa,KAAI,SAAApC,GAAI,OAAIA,EAAKgB,KAAOA,EAAKhB,EAAOwC,MACnDtC,QAAQC,IAAIoB,MAEbkB,OAAM,SAAAC,GACLZ,EAAgB,QAAD,OACL9B,EAAKM,QADA,yCAGfqC,YAAW,WACTb,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAEtB,KAAOA,SAmB4B4B,CAAmB5C,EAAKgB,MAAvEhB,EAAKgB,SAGtB,uBAAM6B,SA7DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB1C,QAASmB,EACTwB,MAAM,IAAIC,MAAOC,cACjB/C,UAAWgD,KAAKC,SAAW,GAC3BrC,GAAIO,EAAM+B,OAAS,GAGrBtB,EAAmBgB,GAChBrC,MAAK,SAAA4C,GACJ/B,EAASD,EAAMiC,OAAOD,IACtB7B,EAAW,QAiDb,UACE,uBACE+B,MAAShC,EACTiC,SApEiB,SAACZ,GACxBpB,EAAWoB,EAAMa,OAAOF,UAqEpB,wBAAQG,KAAK,SAAb,yB,MC5ERC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c8a0794d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  console.log(note.important)  \r\n  const label = note.important ? 'make not important' : 'make important'\r\n\r\n    return (\r\n      <li>\r\n        {note.content} <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    )\r\n  }\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    }\n\n    noteService.create(noteObject)\n      .then(createdNote => {\n        setNotes(notes.concat(createdNote))\n        setNewNote('')\n      })\n  }\n\n  useEffect(() => {\n    noteService.getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  \n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService.update(id, changedNote).then(updatedNote => {\n      console.log(updatedNote)\n      setNotes(notes.map(note => note.id !== id ? note : updatedNote))\n      console.log(notes)\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note ${note.content} was already removed from the server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n  console.log(\"RENDER\")\n  console.log(notesToShow)\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick = {() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note key = {note.id} note = {note} toggleImportance={() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit = {addNote}>\n        <input \n          value = {newNote}\n          onChange = {handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport React from 'react'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}